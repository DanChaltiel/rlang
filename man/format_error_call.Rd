% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cnd-abort.R
\name{format_error_call}
\alias{format_error_call}
\alias{error_call}
\title{Validate and format a function call for use in error messages}
\usage{
format_error_call(call)

error_call(call)
}
\arguments{
\item{call, error_call}{An expression (as returned by e.g.
\code{sys.call()}) representing the context in which the error
occurred. If non-null, the call is stripped from its arguments to
keep it simple.

Can also be an execution environment of a currently running
function (as returned by e.g. \code{parent.frame()}). The
corresponding call is then retrieved.}
}
\value{
Either a string formatted as code or \code{NULL} if \code{call} or
the result of \code{error_call(call)} is \code{NULL}.
}
\description{
\itemize{
\item \code{error_call()} creates a function call ready to be used as \code{call}
field of error conditions. This field is displayed by \code{\link[=stop]{stop()}}
and \code{\link[=abort]{abort()}} to give context to an error message.
\item \code{format_error_call()} passes its input to \code{error_call()} and
formats the result as code. Use this function if you are
generating the "in" part of an error message from a stack frame
call.
}

Use \verb{@inheritParams rlang::format_error_call} to document
\code{call} or \code{error_call} arguments.
}
\seealso{
\code{\link[=format_error_arg]{format_error_arg()}}
}
