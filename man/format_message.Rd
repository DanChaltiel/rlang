% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cnd-message.R
\name{format_message}
\alias{format_message}
\alias{format_error_message}
\alias{format_warning_message}
\title{Format message}
\usage{
format_message(x, env = caller_env())

format_error_message(x, env = caller_env())

format_warning_message(x, env = caller_env())
}
\arguments{
\item{x}{A character vector to format into a message ready for
display.}

\item{env}{The interpolation environment to use in case cli
formatting is enabled.}
}
\description{
TODO:
\itemize{
\item Flesh out documentation.
\item Replace \code{\link[=format_bullets]{format_bullets()}} by \code{format_message()}.
}

These utils take a character vector and return a single string
formatted according to \code{\link[=format_bullets]{format_bullets()}} (TODO: unexport this and
merge documentation).  If you generate condition messages lazily
from a \code{\link[=conditionMessage]{conditionMessage()}} or \code{\link[=cnd_message]{cnd_message()}} method, call one of
these to format the message for display.

If cli is available and if \code{env} has the cli formatting flag (see
\link{cli-format}), cli formatting is applied to \code{x}.

\code{format_message()} powers \code{\link[=warn]{warn()}} and \code{\link[=inform]{inform()}}.
\code{format_error_message()} powers \code{\link[=abort]{abort()}}. The latter is needed to
get correct formatting in case cli is used.
}
