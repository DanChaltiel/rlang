% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/attr.R
\name{is_named}
\alias{is_named}
\alias{have_name}
\title{Is object named?}
\usage{
is_named(x)

have_name(x)
}
\arguments{
\item{x}{A vector to test.}
}
\value{
\code{is_named()} is a scalar predicate that returns \code{TRUE} or
\code{FALSE}. \code{have_name()} is vectorised and returns a logical vector
as long as the input.
}
\description{
\code{is_named()} checks that \code{x} has vector names, and that none of the
names are missing or empty (\code{NA} or \code{""}). \code{have_name()} is a
vectorised version of \code{is_named()}.
}
\examples{
# is_named() is a scalar predicate about the whole vector of names:
is_named(c(a = 1, b = 2))
is_named(c(a = 1, 2))

# have_name() is a vectorised predicate
have_name(c(a = 1, b = 2))
have_name(c(a = 1, 2))

# Empty and missing names are treated as invalid:
invalid <- set_names(letters[1:5])
names(invalid)[1] <- ""
names(invalid)[3] <- NA

is_named(invalid)
have_name(invalid)

# is_named() only returns TRUE if there is a names attribute (a
# zero-length character vector in this case):
x <- set_names(list(), character(0))
is_named(x)

# have_name() will work even with vectors that don't have a names
# attribute:
have_name(letters)


# A data frame normally has valid, unique names
is_named(mtcars)
have_name(mtcars)

# A matrix usually doesn't because the names are stored in a
# different attribute
mat <- matrix(1:4, 2)
colnames(mat) <- c("a", "b")
is_named(mat)
names(mat)
}
